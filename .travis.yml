# this is the file that will be automatically detected by travis-ci to automatically build and deploy our solution
# tells travis-ci that we need sudo level access because we're making use of docker
sudo: required
# tells travis-ci to install docker into it's container
services:
  - docker
# has a series of different commands that will get executed before the tests are run
# here we're telling docker to build the docker image using Dockerfile.dev and tag it
before_install:
  - docker build -t jimmygjtang/learning-deployment -f Dockerfile.dev .
# telling docker to run the test suite
# we're using --coverage to ensure that the tests exit once completed, if we didn't run it with coverage, jest would hang there waiting for user input
# if it exits with an exit code other than (0) then travis will assume the tests failed.
script:
  - docker run -e CI=true jimmygjtang/learning-deployment npm run test
# instructions to deploy the application

deploy:
  provider: elasticbeanstalk # travis comes with a bunch of providers already such as aws, digitalocean, heroku(?)
  region: "us-east-2" # can find this value in the elastic beanstalk url. Must be wrapped in double quotes
  app: "learning-development" # the same name as we created the application name
  env: "LearningDeployment-env" # this is the value that is found after All Application > learning-deployment >
  bucket_name: "elasticbeanstalk-us-east-2-110555950416" # this is the S3 storage bucket where our app will be stored
  bucker_path: "learning-development" # this is the folder path within the S3 storage in which the app will be stored, if this is a brand new application that hasn't been deployed yet, you won't find it in the AWS web interface. It will only show after first initial deploy
  on:
    branch: master # tells travis to only deploy when master branch updates
  access_key_id: $AWS_ACCESS_KEY # aws access key that we defined as an environment variable in the build project in Travis CI web interface
  secret_access_key:
    secure: "$AWS_SECRET_KEY" # aws secret key that we defined also as an environment variable in the build project in Travis CI web interface. This needs to be wrapped in "".